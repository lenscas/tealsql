name: Tests
on:
  pull_request:
    paths:
      - "**/*.rs"
      - 'Cargo.toml'
      - '**/Cargo.lock'
      - '**/Cargo.toml'
      - '.github/workflows/ci.yml'
jobs:
  formatting:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        tests :
          - "cargo fmt --all -- --check"
    steps:
    - uses: actions/checkout@v2
    - uses: hecrj/setup-rust-action@v1
      with:
        rust-version: stable
        components: rustfmt
    - name: Formatting check
      run: ${{matrix.tests}}
  clippy:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        tests :
          - "cargo clippy --features lua54"
          - "cargo clippy --features lua53"
          - "cargo clippy --features lua52"
          - "cargo clippy --features lua51"
    steps:
    - uses: hecrj/setup-rust-action@v1.3.4 
      with:
        rust-version: stable
        components: clippy
    - uses: actions/checkout@master
    - name: Clippy
      run: ${{matrix.tests}}
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        luaVersion :
          - "5.4"
          - "5.3"
          - "5.2"
          - "5.1"
    services:
      # label used to access the service container
      postgres:
        # Docker Hub image
        image: postgres:latest
        # service environment variables
        # `POSTGRES_HOST` is `postgres`
        env:
          # optional (defaults to `postgres`)
          POSTGRES_DB: tealsql
          # required
          POSTGRES_PASSWORD: tealsql
          # optional (defaults to `5432`)
          POSTGRES_PORT: 5432
          # optional (defaults to `postgres`)
          POSTGRES_USER: tealsql
        ports:
          # maps tcp port 5432 on service container to the host
          - 5432:5432
        # set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
      - uses: actions/checkout@v2
      - name: Install PostgreSQL client
        run: |
          sudo apt-get update
          sudo apt-get install --yes postgresql-client
      - name: Setup database
        run: psql -h localhost -U tealsql -d tealsql -f ./test_cli/setup_db.sql;
        env:
          PGPASSWORD: tealsql
      - name: install tealr_doc_gen
        run: cargo install tealr_doc_gen --version 0.3.0-alpha1 --debug
      - uses: leafo/gh-actions-lua@v8.0.0
        with:
          luaVersion: ${{matrix.luaVersion}}
      - uses: leafo/gh-actions-luarocks@v4.0.0
      - name: install teal
        run: luarocks install tl
      - name: run setup_cli_test
        run: ./test_cli/setup_cli_test.sh
      - name: run cli tests
        run: cd ./test_cli/cli_test && tl build && lua test.lua
